#@ load("@ytt:template", "template")
#@ load("@ytt:yaml", "yaml")

#@ def quarks_secret_uaa_client_credential_template(client_name):
oauth:
  #@yaml/text-templated-strings
  clients:
    (@= client_name @):
      secret: "{{.Values.client_credentials}}"
#@ end

#@ def quarks_secret_uaa_client_credentials(client_name, credential_reference):
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: #@ "uaa-templated-" + credential_reference
  namespace: concourse
spec:
  type: templatedconfig
  secretName: #@ "uaa-" + credential_reference
  request:
    templatedConfig:
      type: helm
      templates:
        client_credentials.yml: #@ yaml.encode(quarks_secret_uaa_client_credential_template(client_name))
      values:
        client_credentials:
          name: #@ credential_reference
          key: "password"
#@ end

#@ def quarks_secret_uaa_concourse_admin_user_credential_template():
scim:
  users:
  - "admin|{{.Values.client_credentials}}|admin@admin.tld|first|last|clients.read,cloud_controller.admin,doppler.firehose,network.admin,openid,routing.router_groups.read,routing.router_groups.write,scim.read,scim.write|uaa"
#@ end

#@ def quarks_secret_uaa_concourse_admin_user_credentials():
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-templated-concourse-admin-user-credentials
  namespace: concourse
spec:
  type: templatedconfig
  secretName: uaa-concourse-admin-user-credentials
  request:
    templatedConfig:
      type: helm
      templates:
        concourse_admin_user_credentials.yml: #@ yaml.encode(quarks_secret_uaa_concourse_admin_user_credential_template())
      values:
        client_credentials:
          name: "concourse-admin-user-credentials"
          key: "password"
#@ end

#@ def encryption_keys():
encryption: "{{.Values.client_credentials}}"
#@ end

#@ def quarks_secret_uaa_encryption_keys():
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-encryption-keys
  namespace: concourse
spec:
  type: templatedconfig
  secretName: encryption-keys
  request:
    templatedConfig:
      type: helm
      templates:
        encryption_keys.yml: #@ yaml.encode(encryption_keys())
      values:
        client_credentials:
          name: "encryption-key"
          key: "password"
#@ end

#@ def saml_keys():
login:
  saml:
    activeKeyId: default_saml_key
    keys:
      default_saml_key:
        key: "{{.Values.private_key}}"
        certificate: "{{.Values.certificate}}"
        passphrase: mysecret
#@ end

#@ def quarks_secret_uaa_saml_keys():
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-saml-keys-file
  namespace: concourse
spec:
  type: templatedconfig
  secretName: uaa-saml-keys
  request:
    templatedConfig:
      type: helm
      templates:
        saml_keys.yml: #@ yaml.encode(saml_keys())
      values:
        certificate:
          name: "saml-keys"
          key: "certificate"
        private_key:
          name: "saml-keys"
          key: "private_key"
#@ end

#@ def jwt_keys():
jwt:
  token:
    policy:
      activeKeyId: "default_jwt_policy_key"
      keys:
        default_jwt_policy_key:
          signingKey: "{{.Values.private_key}}"
#@ end

#@ def quarks_secret_uaa_jwt_keys():
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-jwt-policy-signing-keys
  namespace: concourse
spec:
  type: templatedconfig
  secretName: uaa-jwt-policy-signing-keys
  request:
    templatedConfig:
      type: helm
      templates:
        jwt_policy_signing_keys.yml: #@ yaml.encode(jwt_keys())
      values:
        private_key:
          name: "jwt-keys"
          key: "private_key"
#@ end

#@ def database_credentials(password):
database:
  username: uaa
  password: #@ password
#@ end

#@ def quarks_uaa_database_credentials():
---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-templated-database-credentials
  namespace: concourse
spec:
  type: templatedconfig
  secretName: uaa-database-credentials
  request:
    templatedConfig:
      type: helm
      templates:
        database_credentials.yml: #@ yaml.encode(database_credentials("{{.Values.postgresqlPassword}}"))
      values:
        postgresqlPassword:
          name: "uaa-postgresql-password"
          key: "password"
#@ end

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: concourse-admin-user-credentials
  namespace: concourse
spec:
  type: password
  secretName: concourse-admin-user-credentials

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: saml-keys-ca
  namespace: concourse
spec:
  request:
    certificate:
      alternativeNames: null
      commonName: ca
      isCA: true
      signerType: local
  type: certificate
  secretName: saml-keys-ca

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: saml-keys
  namespace: concourse
spec:
  certificate:
    CAKeyRef:
      key: private_key
      name:  saml-keys-ca
    CARef:
      key: certificate
      name:  saml-keys-ca
    alternativeNames: null
    commonName: uaa_login_service_provider
    isCA: false
    signerType: local
  type: certificate
  secretName: saml-keys

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: jwt-keys
  namespace: concourse
spec:
  type: rsa
  secretName: jwt-keys

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: encryption-key
  namespace: concourse
spec:
  type: password
  secretName: encryption-key

---
apiVersion: quarks.cloudfoundry.org/v1alpha1
kind: QuarksSecret
metadata:
  name: uaa-admin-client-credentials
  namespace: concourse
spec:
  type: password
  secretName: uaa-admin-client-credentials

--- #@ template.replace(quarks_secret_uaa_client_credentials("admin", "uaa-admin-client-credentials"))
--- #@ template.replace(quarks_secret_uaa_concourse_admin_user_credentials())
--- #@ template.replace(quarks_secret_uaa_encryption_keys())
--- #@ template.replace(quarks_secret_uaa_saml_keys())
--- #@ template.replace(quarks_uaa_database_credentials())