apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: concourse-worker
  labels:
    app: concourse-worker
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: concourse-worker
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: concourse-worker
  labels:
    app: concourse-worker
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
data:
  pre-stop-hook.sh: |
    #!/bin/bash
    kill -s SIGUSR2 1
    while [ -e /proc/1 ]; do sleep 1; done
---
apiVersion: v1
kind: Service
metadata:
  name: concourse-postgresql-headless
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.13
    app.kubernetes.io/instance: concourse
    app.kubernetes.io/managed-by: Helm
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: concourse
---
apiVersion: v1
kind: Service
metadata:
  name: concourse-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.13
    app.kubernetes.io/instance: concourse
    app.kubernetes.io/managed-by: Helm
  annotations: null
  namespace: default
spec:
  type: ClusterIP
  ports:
  - name: tcp-postgresql
    port: 5432
    targetPort: tcp-postgresql
  selector:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/instance: concourse
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: concourse-web
  labels:
    app: concourse-web
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  type: LoadBalancer
  ports:
  - name: atc
    port: 8080
    targetPort: atc
  selector:
    app: concourse-web
---
apiVersion: v1
kind: Service
metadata:
  name: concourse-web-worker-gateway
  labels:
    app: concourse-web
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  type: ClusterIP
  ports:
  - name: worker-gateway
    port: 2222
    targetPort: tsa
  selector:
    app: concourse-web
---
apiVersion: v1
kind: Service
metadata:
  name: concourse-worker
  labels:
    app: concourse-worker
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports: []
  selector:
    app: concourse-worker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: concourse-web
  labels:
    app: concourse-web
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: concourse-web
      release: concourse
  template:
    metadata:
      labels:
        app: concourse-web
        release: concourse
    spec:
      serviceAccountName: default
      initContainers:
      - name: concourse-migration
        image: concourse/concourse:7.2.0
        args:
        - migrate
        - --migrate-to-latest-version
        env:
        - name: CONCOURSE_POSTGRES_HOST
          value: concourse-postgresql
        - name: CONCOURSE_POSTGRES_USER
          value: concourse
        - name: CONCOURSE_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: concourse-postgresql
              key: postgresql-password
        - name: CONCOURSE_POSTGRES_DATABASE
          value: concourse
        volumeMounts: null
      containers:
      - name: concourse-web
        image: concourse/concourse:7.2.0
        imagePullPolicy: IfNotPresent
        args:
        - web
        env:
        - name: CONCOURSE_ENABLE_GLOBAL_RESOURCES
          value: "true"
        - name: CONCOURSE_SECRET_RETRY_ATTEMPTS
          value: "5"
        - name: CONCOURSE_SECRET_RETRY_INTERVAL
          value: 1s
        - name: CONCOURSE_LOG_LEVEL
          value: info
        - name: CONCOURSE_BIND_PORT
          value: "8080"
        - name: CONCOURSE_BIND_IP
          value: 0.0.0.0
        - name: CONCOURSE_ADD_LOCAL_USER
          valueFrom:
            secretKeyRef:
              name: concourse-web
              key: local-users
        - name: CONCOURSE_DEBUG_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_DEBUG_BIND_PORT
          value: "8079"
        - name: CONCOURSE_INTERCEPT_IDLE_TIMEOUT
          value: 0m
        - name: CONCOURSE_GLOBAL_RESOURCE_CHECK_TIMEOUT
          value: 1h
        - name: CONCOURSE_RESOURCE_CHECKING_INTERVAL
          value: 1m
        - name: CONCOURSE_RESOURCE_WITH_WEBHOOK_CHECKING_INTERVAL
          value: 1m
        - name: CONCOURSE_CONTAINER_PLACEMENT_STRATEGY
          value: volume-locality
        - name: CONCOURSE_BAGGAGECLAIM_RESPONSE_HEADER_TIMEOUT
          value: 1m
        - name: CONCOURSE_BUILD_TRACKER_INTERVAL
          value: 10s
        - name: CONCOURSE_POSTGRES_HOST
          value: concourse-postgresql
        - name: CONCOURSE_POSTGRES_USER
          value: concourse
        - name: CONCOURSE_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: concourse-postgresql
              key: postgresql-password
        - name: CONCOURSE_POSTGRES_DATABASE
          value: concourse
        - name: CONCOURSE_GC_INTERVAL
          value: 30s
        - name: CONCOURSE_GC_ONE_OFF_GRACE_PERIOD
          value: 5m
        - name: CONCOURSE_GC_MISSING_GRACE_PERIOD
          value: 5m
        - name: CONCOURSE_AUTH_DURATION
          value: 24h
        - name: CONCOURSE_SESSION_SIGNING_KEY
          value: /concourse-keys/session_signing_key
        - name: CONCOURSE_MAIN_TEAM_LOCAL_USER
          value: test
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONCOURSE_PEER_ADDRESS
          value: $(POD_IP)
        - name: CONCOURSE_TSA_LOG_LEVEL
          value: info
        - name: CONCOURSE_TSA_BIND_IP
          value: 0.0.0.0
        - name: CONCOURSE_TSA_BIND_PORT
          value: "2222"
        - name: CONCOURSE_TSA_DEBUG_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_TSA_DEBUG_BIND_PORT
          value: "2221"
        - name: CONCOURSE_TSA_HOST_KEY
          value: /concourse-keys/host_key
        - name: CONCOURSE_TSA_AUTHORIZED_KEYS
          value: /concourse-keys/worker_key.pub
        - name: CONCOURSE_TSA_HEARTBEAT_INTERVAL
          value: 30s
        ports:
        - name: atc
          containerPort: 8080
        - name: tsa
          containerPort: 2222
        - name: atc-debug
          containerPort: 8079
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /api/v1/info
            port: atc
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /api/v1/info
            port: atc
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: concourse-keys
          mountPath: /concourse-keys
          readOnly: true
        - name: auth-keys
          mountPath: /concourse-auth
          readOnly: true
      volumes:
      - name: concourse-keys
        secret:
          secretName: concourse-web
          defaultMode: 256
          items:
          - key: host-key
            path: host_key
          - key: session-signing-key
            path: session_signing_key
          - key: worker-key-pub
            path: worker_key.pub
      - name: auth-keys
        secret:
          secretName: concourse-web
          defaultMode: 256
          items: null
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: concourse-postgresql
  labels:
    app.kubernetes.io/name: postgresql
    helm.sh/chart: postgresql-10.3.13
    app.kubernetes.io/instance: concourse
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: primary
  annotations: null
  namespace: default
spec:
  serviceName: concourse-postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
      app.kubernetes.io/instance: concourse
      role: primary
  template:
    metadata:
      name: concourse-postgresql
      labels:
        app.kubernetes.io/name: postgresql
        helm.sh/chart: postgresql-10.3.13
        app.kubernetes.io/instance: concourse
        app.kubernetes.io/managed-by: Helm
        role: primary
        app.kubernetes.io/component: primary
    spec:
      affinity:
        podAffinity: null
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: postgresql
                  app.kubernetes.io/instance: concourse
                  app.kubernetes.io/component: primary
              namespaces:
              - default
              topologyKey: kubernetes.io/hostname
            weight: 1
        nodeAffinity: null
      securityContext:
        fsGroup: 1001
      containers:
      - name: concourse-postgresql
        image: docker.io/bitnami/postgresql:11.11.0-debian-10-r31
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
        securityContext:
          runAsUser: 1001
        env:
        - name: BITNAMI_DEBUG
          value: "false"
        - name: POSTGRESQL_PORT_NUMBER
          value: "5432"
        - name: POSTGRESQL_VOLUME_DIR
          value: /bitnami/postgresql
        - name: PGDATA
          value: /bitnami/postgresql/data
        - name: POSTGRES_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: concourse-postgresql
              key: postgresql-postgres-password
        - name: POSTGRES_USER
          value: concourse
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: concourse-postgresql
              key: postgresql-password
        - name: POSTGRES_DB
          value: concourse
        - name: POSTGRESQL_ENABLE_LDAP
          value: "no"
        - name: POSTGRESQL_ENABLE_TLS
          value: "no"
        - name: POSTGRESQL_LOG_HOSTNAME
          value: "false"
        - name: POSTGRESQL_LOG_CONNECTIONS
          value: "false"
        - name: POSTGRESQL_LOG_DISCONNECTIONS
          value: "false"
        - name: POSTGRESQL_PGAUDIT_LOG_CATALOG
          value: "off"
        - name: POSTGRESQL_CLIENT_MIN_MESSAGES
          value: error
        - name: POSTGRESQL_SHARED_PRELOAD_LIBRARIES
          value: pgaudit
        ports:
        - name: tcp-postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - exec pg_isready -U "concourse" -d "dbname=concourse" -h 127.0.0.1 -p 5432
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - -e
            - |
              exec pg_isready -U "concourse" -d "dbname=concourse" -h 127.0.0.1 -p 5432
              [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        - name: data
          mountPath: /bitnami/postgresql
          subPath: null
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: concourse-worker
  labels:
    app: concourse-worker
    chart: concourse-15.0.3
    release: concourse
    heritage: Helm
spec:
  serviceName: concourse-worker
  replicas: 2
  selector:
    matchLabels:
      app: concourse-worker
      release: concourse
  template:
    metadata:
      labels:
        app: concourse-worker
        release: concourse
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      initContainers:
      - name: concourse-worker-init-rm
        image: concourse/concourse:7.2.0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command:
        - /bin/bash
        args:
        - -ce
        - |-
          for v in $((btrfs subvolume list --sort=-ogen "/concourse-work-dir" || true) | awk '{print $9}'); do
            (btrfs subvolume show "/concourse-work-dir/$v" && btrfs subvolume delete "/concourse-work-dir/$v") || true
          done
          rm -rf "/concourse-work-dir/*"
        volumeMounts:
        - name: concourse-work-dir
          mountPath: /concourse-work-dir
      containers:
      - name: concourse-worker
        image: concourse/concourse:7.2.0
        imagePullPolicy: IfNotPresent
        args:
        - worker
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: worker-hc
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - /pre-stop-hook.sh
        env:
        - name: CONCOURSE_SWEEP_INTERVAL
          value: 30s
        - name: CONCOURSE_CONNECTION_DRAIN_TIMEOUT
          value: 1h
        - name: CONCOURSE_HEALTHCHECK_BIND_IP
          value: 0.0.0.0
        - name: CONCOURSE_HEALTHCHECK_BIND_PORT
          value: "8888"
        - name: CONCOURSE_HEALTHCHECK_TIMEOUT
          value: 5s
        - name: CONCOURSE_DEBUG_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_DEBUG_BIND_PORT
          value: "7776"
        - name: CONCOURSE_WORK_DIR
          value: /concourse-work-dir
        - name: CONCOURSE_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_BIND_PORT
          value: "7777"
        - name: CONCOURSE_LOG_LEVEL
          value: info
        - name: CONCOURSE_TSA_HOST
          value: concourse-web-worker-gateway:2222
        - name: CONCOURSE_TSA_PUBLIC_KEY
          value: /concourse-keys/host_key.pub
        - name: CONCOURSE_TSA_WORKER_PRIVATE_KEY
          value: /concourse-keys/worker_key
        - name: CONCOURSE_BAGGAGECLAIM_LOG_LEVEL
          value: info
        - name: CONCOURSE_BAGGAGECLAIM_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_BAGGAGECLAIM_BIND_PORT
          value: "7788"
        - name: CONCOURSE_BAGGAGECLAIM_DEBUG_BIND_IP
          value: 127.0.0.1
        - name: CONCOURSE_BAGGAGECLAIM_DEBUG_BIND_PORT
          value: "7787"
        - name: CONCOURSE_BAGGAGECLAIM_DRIVER
          value: naive
        - name: CONCOURSE_BAGGAGECLAIM_BTRFS_BIN
          value: btrfs
        - name: CONCOURSE_BAGGAGECLAIM_MKFS_BIN
          value: mkfs.btrfs
        - name: CONCOURSE_VOLUME_SWEEPER_MAX_IN_FLIGHT
          value: "5"
        - name: CONCOURSE_CONTAINER_SWEEPER_MAX_IN_FLIGHT
          value: "5"
        ports:
        - name: worker-hc
          containerPort: 8888
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          privileged: true
        volumeMounts:
        - name: concourse-keys
          mountPath: /concourse-keys
          readOnly: true
        - name: concourse-work-dir
          mountPath: /concourse-work-dir
        - name: pre-stop-hook
          mountPath: /pre-stop-hook.sh
          subPath: pre-stop-hook.sh
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: concourse-worker
                  release: concourse
      volumes:
      - name: pre-stop-hook
        configMap:
          name: concourse-worker
      - name: concourse-keys
        secret:
          secretName: concourse-worker
          defaultMode: 256
          items:
          - key: host-key-pub
            path: host_key.pub
          - key: worker-key
            path: worker_key
  volumeClaimTemplates:
  - metadata:
      name: concourse-work-dir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 20Gi
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
